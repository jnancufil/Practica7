using System;

namespace ejercicio1{
    class Program
    {
        static void Main(string[] args)
        {
            Ejecutar(); 
            //Console.WriteLine("Hello World!");
            Console.ReadLine(); 
        }
        public static void Ejecutar()
    {
        	System.Collections.ArrayList lista = new System.Collections.ArrayList() {
			new Persona(),
			new Autos()	
			};
		foreach(IComercial c in lista)
		{
			c.Importa();
		}
		foreach(IImportante i in lista)
		{
			i.Importa();
		} 
		(lista[0] as Persona).Importa();
		(lista[1] as Autos).Importa();
	}
}
    
    class Autos: IVendible, ILavable, IReciclable, IComercial, IImportante{
	    public string ID {get;} 
	    public Autos() => ID = "auto"; 
	    //public Autos (string unNombre)=> ID = unNombre; 
	
	    public void SeVendeA(Persona p)=> Console.WriteLine ($"Vendiendo {this.ID} a {p.Nombre}"); 
	
	    public void SeLava() => Console.WriteLine($"Lavando {this.ID}"); 
	    public void SeSeca() => Console.WriteLine ($"Secando {this.ID}"); 
	    public void SeRecicla()=> Console.WriteLine ($"Reciclando {this.ID}"); 
	    void IComercial.Importa()=>Console.WriteLine("Auto que se vende al exterior"); 
	    void IImportante.Importa()=>Console.WriteLine("Auto importante"); 
	    public void Importa()=> Console.WriteLine("Metodo Importar() de la clase Auto "); 
}
    class Libros: IAlquilable, IReciclable{
	    public string Titulo {get; }
	
	    public Libros()=> Titulo = "Libro"; 
	    //public Libros (string unTitulo) => Titulo = unTitulo; 
	    public void SeAlquilaA (Persona p)=> Console.WriteLine($"Alquilando {this.Titulo} a {p.Nombre}"); 
	    public void Devolucion (Persona p) => Console.WriteLine($"{this.Titulo} devuelto por {p.Nombre}"); 
	    public void SeRecicla() => Console.WriteLine($"Reciclando {this.Titulo}");  
}
    class Peliculas: IAlquilable{
	    public string Film {get; }
	    public Peliculas() => Film = "Pelicula"; 
	    public Peliculas (string unaPeli)=> Film = unaPeli; 
  
	    public void SeAlquilaA (Persona p) => Console.WriteLine($"Alquilando {this.Film} a {p.Nombre}"); 
	    public void Devolucion( Persona p) => Console.WriteLine($"{this.Film} devuelta por {p.Nombre}"); 
}
    class Persona:IAtendible,IComercial, IImportante{
	    public string Nombre {get; }
	    public Persona() => Nombre = "persona"; 
	
	    public void Atender() => Console.WriteLine($"Atendiendo {this.Nombre}"); 
	    void IComercial.Importa()=>Console.WriteLine("Persona vendiendo al exterior"); 
	    void IImportante.Importa()=>Console.WriteLine("Persona Importante"); 
	    public void Importa()=>Console.WriteLine ("Metodo Importar() de la clase Persona"); 

}
    class Perros: IVendible, IAtendible, ILavable{
	    public string Name {get; }
	    public Perros() => Name = "Chibi"; 
	    public void SeVendeA(Persona p)=> Console.WriteLine($"Vendiendo {this.Name} (PERRO) a {p.Nombre}");  
	    public void Atender()=> Console.WriteLine($"Atendiendo {this.Name}"); 
	    public void SeLava()=> Console.WriteLine($"Lavando {this.Name} (Perro)"); 
	    public void SeSeca()=> Console.WriteLine($"Secando {this.Name} (Perro)");

} 
    class PeliculaClasica: Peliculas, IVendible{
	//public string NombrePeli {get;}="pelicula clasica";
	

	public PeliculaClasica(): base("pelicula clasica"){}
    //public PeliculaClasica(string unTitulo) : base(unTitulo){}
	public void SeVendeA(Persona p)=> Console.WriteLine ($"Vendiendo {base.Film} a {p.Nombre}"); 
}

    interface IAlquilable
	{
	    public void SeAlquilaA(Persona p); 
	    public void Devolucion(Persona p); 
	}
    interface IVendible{
	    public void SeVendeA(Persona p); }
    public interface ILavable {
	    public void SeLava();
	    public void SeSeca(); }
    public interface IReciclable{
	    public void SeRecicla(); }
    public interface IAtendible{
	    public void Atender(); }

//Implementacion explicita de interfaces 
    public interface IComercial{
	   public void Importa(); }// En la clase: void IInterfaceX.Metodo() => implementacion; 
    public interface IImportante{
	   public void Importa(); }


    static class Procesador {
	    public static void Alquilar (IAlquilable x, Persona p) => x.SeAlquilaA(p);
	    public static void Atender(IAtendible p ) => p.Atender(); 
	    public static void Devolver(IAlquilable x, Persona p) => x.Devolucion(p); 
	    public static void Lavar (ILavable x) => x.SeLava(); 
	    public static void Reciclar(IReciclable z) => z.SeRecicla(); 
	    public static void Secar (ILavable x) => x.SeSeca(); 
	    public static void Vender (IVendible x, Persona p)=> x.SeVendeA(p); 
}
    
}
